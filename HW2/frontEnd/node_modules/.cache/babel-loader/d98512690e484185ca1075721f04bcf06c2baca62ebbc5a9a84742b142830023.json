{"ast":null,"code":"var _jsxFileName = \"C:\\\\WebCourse\\\\WEB-Course\\\\HW2\\\\frontEnd\\\\src\\\\components\\\\homePage\\\\GraphComponent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { DataSet, Network } from 'vis-network/standalone';\n// import 'vis-network/styles/vis-network.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GraphComponent = () => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [filter, setFilter] = useState('all');\n  useEffect(() => {\n    fetchUserData().then(data => setUsers(data));\n  }, []);\n  useEffect(() => {\n    const container = document.getElementById('network-graph');\n    if (container) {\n      renderGraph(container, users, filter);\n    } else {\n      const newContainer = document.createElement('div');\n      newContainer.id = 'network-graph';\n      newContainer.className = 'w-full h-600 bg-gray-500 bg-opacity-50 p-8 rounded-lg shadow-lg flex items-center justify-center';\n      newContainer.style.marginTop = '4px';\n      document.body.appendChild(newContainer);\n      renderGraph(newContainer, users, filter);\n    }\n  }, [users, filter]);\n  const fetchUserData = async () => {\n    const response = await fetch('/users.json');\n    return response.json();\n  };\n  const filterUsers = (users, me, filter) => {\n    return users.filter(user => {\n      if (filter === 'all') {\n        return user.workplace === me.workplace || user.hobby === me.hobby || user.state === me.state;\n      }\n      if (filter === 'workplace') return user.workplace === me.workplace;\n      if (filter === 'hobby') return user.hobby === me.hobby;\n      if (filter === 'state') return user.state === me.state;\n      return false;\n    });\n  };\n  const createNodes = (users, me) => {\n    return new DataSet([...users.map(user => ({\n      id: user.id_num,\n      label: `${user.firstName} ${user.lastName}`\n    })), {\n      id: me.id_num,\n      label: 'Me',\n      color: {\n        background: 'red',\n        border: 'black'\n      },\n      size: 40\n    }]);\n  };\n  const addToMap = (map, key, value) => {\n    if (!map[key]) map[key] = [];\n    map[key].push(value);\n  };\n  const createEdgesForMap = (edges, map, color) => {\n    Object.values(map).forEach(ids => {\n      for (let i = 0; i < ids.length - 1; i++) {\n        for (let j = i + 1; j < ids.length; j++) {\n          edges.add({\n            from: ids[i],\n            to: ids[j],\n            color: {\n              color\n            }\n          });\n        }\n      }\n    });\n  };\n  const addEdgesForMe = (edges, me, ids, color) => {\n    if (ids) {\n      ids.forEach(id => {\n        edges.add({\n          from: me.id_num,\n          to: id,\n          color: {\n            color\n          }\n        });\n      });\n    }\n  };\n  const createEdges = (users, me, filter) => {\n    const edges = new DataSet();\n    const map = {\n      workplace: {},\n      hobby: {},\n      state: {}\n    };\n    users.forEach(user => {\n      addToMap(map.workplace, user.workplace, user.id_num);\n      addToMap(map.hobby, user.hobby, user.id_num);\n      addToMap(map.state, user.state, user.id_num);\n    });\n    if (filter === 'all' || filter === 'workplace') createEdgesForMap(edges, map.workplace, 'blue');\n    if (filter === 'all' || filter === 'hobby') createEdgesForMap(edges, map.hobby, 'green');\n    if (filter === 'all' || filter === 'state') createEdgesForMap(edges, map.state, 'purple');\n    addEdgesForMe(edges, me, map.workplace[me.workplace], 'blue');\n    addEdgesForMe(edges, me, map.hobby[me.hobby], 'green');\n    addEdgesForMe(edges, me, map.state[me.state], 'purple');\n    return edges;\n  };\n  const getGraphOptions = () => ({\n    autoResize: true,\n    height: '100%',\n    width: '100%',\n    nodes: {\n      shape: 'dot',\n      size: 32,\n      font: {\n        size: 32,\n        color: '#314155'\n      },\n      borderWidth: 2\n    },\n    edges: {\n      width: 2,\n      color: {\n        color: '#848484',\n        highlight: '#848484',\n        hover: '#848484',\n        opacity: 1.0\n      },\n      smooth: {\n        type: 'continuous'\n      }\n    },\n    physics: {\n      enabled: true,\n      solver: 'forceAtlas2Based',\n      forceAtlas2Based: {\n        gravitationalConstant: -50,\n        centralGravity: 0.01,\n        springLength: 200,\n        springConstant: 0.08\n      },\n      maxVelocity: 50,\n      minVelocity: 0.1\n    }\n  });\n  const renderGraph = (container, users, filter) => {\n    const me = {\n      id_num: '000000000',\n      firstName: 'Me',\n      lastName: '',\n      workplace: 'Tech Company Inc.',\n      hobby: 'Reading',\n      state: 'New York'\n    };\n    const filteredUsers = filterUsers(users, me, filter);\n    const nodes = createNodes(filteredUsers, me);\n    const edges = createEdges(filteredUsers, me, filter);\n    const data = {\n      nodes,\n      edges\n    };\n    const options = getGraphOptions();\n    new Network(container, data, options);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tabs flex justify-center space-x-4 my-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setFilter('all'),\n        className: \"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-700\",\n        children: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setFilter('hobby'),\n        className: \"px-4 py-2 bg-green-500 text-white rounded hover:bg-green-700\",\n        children: \"Hobby\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setFilter('workplace'),\n        className: \"px-4 py-2 bg-yellow-500 text-white rounded hover:bg-yellow-700\",\n        children: \"Workplace\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setFilter('state'),\n        className: \"px-4 py-2 bg-purple-500 text-white rounded hover:bg-purple-700\",\n        children: \"State\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"network-graph\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"legend mt-4 text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-blue-500\",\n          children: \"\\u25A0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 12\n        }, this), \" Workplace Connections\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-green-500\",\n          children: \"\\u25A0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 12\n        }, this), \" Hobby Connections\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-purple-500\",\n          children: \"\\u25A0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 12\n        }, this), \" State Connections\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 5\n  }, this);\n};\n_s(GraphComponent, \"3lUk1T4eQr/j1P/EyG1/+CPoNek=\");\n_c = GraphComponent;\nexport default GraphComponent;\nvar _c;\n$RefreshReg$(_c, \"GraphComponent\");","map":{"version":3,"names":["React","useEffect","useState","DataSet","Network","jsxDEV","_jsxDEV","GraphComponent","_s","users","setUsers","filter","setFilter","fetchUserData","then","data","container","document","getElementById","renderGraph","newContainer","createElement","id","className","style","marginTop","body","appendChild","response","fetch","json","filterUsers","me","user","workplace","hobby","state","createNodes","map","id_num","label","firstName","lastName","color","background","border","size","addToMap","key","value","push","createEdgesForMap","edges","Object","values","forEach","ids","i","length","j","add","from","to","addEdgesForMe","createEdges","getGraphOptions","autoResize","height","width","nodes","shape","font","borderWidth","highlight","hover","opacity","smooth","type","physics","enabled","solver","forceAtlas2Based","gravitationalConstant","centralGravity","springLength","springConstant","maxVelocity","minVelocity","filteredUsers","options","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/WebCourse/WEB-Course/HW2/frontEnd/src/components/homePage/GraphComponent.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { DataSet, Network } from 'vis-network/standalone';\r\n// import 'vis-network/styles/vis-network.css';\r\n\r\nconst GraphComponent = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [filter, setFilter] = useState('all');\r\n\r\n  useEffect(() => {\r\n    fetchUserData().then(data => setUsers(data));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const container = document.getElementById('network-graph');\r\n    if (container) {\r\n      renderGraph(container, users, filter);\r\n    } else {\r\n      const newContainer = document.createElement('div');\r\n      newContainer.id = 'network-graph';\r\n      newContainer.className = 'w-full h-600 bg-gray-500 bg-opacity-50 p-8 rounded-lg shadow-lg flex items-center justify-center';\r\n      newContainer.style.marginTop = '4px';\r\n      document.body.appendChild(newContainer);\r\n      renderGraph(newContainer, users, filter);\r\n    }\r\n  }, [users, filter]);\r\n\r\n  const fetchUserData = async () => {\r\n    const response = await fetch('/users.json');\r\n    return response.json();\r\n  };\r\n\r\n  const filterUsers = (users, me, filter) => {\r\n    return users.filter(user => {\r\n      if (filter === 'all') {\r\n        return user.workplace === me.workplace || user.hobby === me.hobby || user.state === me.state;\r\n      }\r\n      if (filter === 'workplace') return user.workplace === me.workplace;\r\n      if (filter === 'hobby') return user.hobby === me.hobby;\r\n      if (filter === 'state') return user.state === me.state;\r\n      return false;\r\n    });\r\n  };\r\n\r\n  const createNodes = (users, me) => {\r\n    return new DataSet([\r\n      ...users.map(user => ({\r\n        id: user.id_num,\r\n        label: `${user.firstName} ${user.lastName}`\r\n      })),\r\n      { id: me.id_num, label: 'Me', color: { background: 'red', border: 'black' }, size: 40 }\r\n    ]);\r\n  };\r\n\r\n  const addToMap = (map, key, value) => {\r\n    if (!map[key]) map[key] = [];\r\n    map[key].push(value);\r\n  };\r\n\r\n  const createEdgesForMap = (edges, map, color) => {\r\n    Object.values(map).forEach(ids => {\r\n      for (let i = 0; i < ids.length - 1; i++) {\r\n        for (let j = i + 1; j < ids.length; j++) {\r\n          edges.add({ from: ids[i], to: ids[j], color: { color } });\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  const addEdgesForMe = (edges, me, ids, color) => {\r\n    if (ids) {\r\n      ids.forEach(id => {\r\n        edges.add({ from: me.id_num, to: id, color: { color } });\r\n      });\r\n    }\r\n  };\r\n\r\n  const createEdges = (users, me, filter) => {\r\n    const edges = new DataSet();\r\n    const map = {\r\n      workplace: {},\r\n      hobby: {},\r\n      state: {}\r\n    };\r\n\r\n    users.forEach(user => {\r\n      addToMap(map.workplace, user.workplace, user.id_num);\r\n      addToMap(map.hobby, user.hobby, user.id_num);\r\n      addToMap(map.state, user.state, user.id_num);\r\n    });\r\n\r\n    if (filter === 'all' || filter === 'workplace') createEdgesForMap(edges, map.workplace, 'blue');\r\n    if (filter === 'all' || filter === 'hobby') createEdgesForMap(edges, map.hobby, 'green');\r\n    if (filter === 'all' || filter === 'state') createEdgesForMap(edges, map.state, 'purple');\r\n\r\n    addEdgesForMe(edges, me, map.workplace[me.workplace], 'blue');\r\n    addEdgesForMe(edges, me, map.hobby[me.hobby], 'green');\r\n    addEdgesForMe(edges, me, map.state[me.state], 'purple');\r\n\r\n    return edges;\r\n  };\r\n\r\n  const getGraphOptions = () => ({\r\n    autoResize: true,\r\n    height: '100%',\r\n    width: '100%',\r\n    nodes: {\r\n      shape: 'dot',\r\n      size: 32,\r\n      font: {\r\n        size: 32,\r\n        color: '#314155',\r\n      },\r\n      borderWidth: 2,\r\n    },\r\n    edges: {\r\n      width: 2,\r\n      color: {\r\n        color: '#848484',\r\n        highlight: '#848484',\r\n        hover: '#848484',\r\n        opacity: 1.0,\r\n      },\r\n      smooth: {\r\n        type: 'continuous',\r\n      },\r\n    },\r\n    physics: {\r\n      enabled: true,\r\n      solver: 'forceAtlas2Based',\r\n      forceAtlas2Based: {\r\n        gravitationalConstant: -50,\r\n        centralGravity: 0.01,\r\n        springLength: 200,\r\n        springConstant: 0.08,\r\n      },\r\n      maxVelocity: 50,\r\n      minVelocity: 0.1,\r\n    },\r\n  });\r\n\r\n  const renderGraph = (container, users, filter) => {\r\n    const me = {\r\n      id_num: '000000000',\r\n      firstName: 'Me',\r\n      lastName: '',\r\n      workplace: 'Tech Company Inc.',\r\n      hobby: 'Reading',\r\n      state: 'New York'\r\n    };\r\n\r\n    const filteredUsers = filterUsers(users, me, filter);\r\n    const nodes = createNodes(filteredUsers, me);\r\n    const edges = createEdges(filteredUsers, me, filter);\r\n\r\n    const data = { nodes, edges };\r\n    const options = getGraphOptions();\r\n\r\n    new Network(container, data, options);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"tabs flex justify-center space-x-4 my-4\">\r\n        <button onClick={() => setFilter('all')} className=\"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-700\">All</button>\r\n        <button onClick={() => setFilter('hobby')} className=\"px-4 py-2 bg-green-500 text-white rounded hover:bg-green-700\">Hobby</button>\r\n        <button onClick={() => setFilter('workplace')} className=\"px-4 py-2 bg-yellow-500 text-white rounded hover:bg-yellow-700\">Workplace</button>\r\n        <button onClick={() => setFilter('state')} className=\"px-4 py-2 bg-purple-500 text-white rounded hover:bg-purple-700\">State</button>\r\n      </div>\r\n      <div id=\"network-graph\"></div>\r\n      <div className=\"legend mt-4 text-center\">\r\n        <p><span className=\"text-blue-500\">■</span> Workplace Connections</p>\r\n        <p><span className=\"text-green-500\">■</span> Hobby Connections</p>\r\n        <p><span className=\"text-purple-500\">■</span> State Connections</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GraphComponent;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}