{"ast":null,"code":"var _jsxFileName = \"C:\\\\WebCourse\\\\WEB-Course\\\\HW2\\\\frontEnd\\\\src\\\\components\\\\homePage\\\\GraphComponent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { DataSet, Network } from 'vis-network/standalone';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GraphComponent = () => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [filter, setFilter] = useState('all');\n  useEffect(() => {\n    const userData = getUsers();\n    setUsers(userData);\n  }, []);\n  useEffect(() => {\n    const container = document.getElementById('network-graph');\n    if (!container) {\n      const newContainer = document.createElement('div');\n      newContainer.id = 'network-graph';\n      newContainer.className = 'w-full bg-gray-500 bg-opacity-50 p-8 rounded-lg shadow-lg flex items-center justify-center';\n      newContainer.style.marginTop = '4px';\n      document.body.appendChild(newContainer);\n    }\n    renderGraph(users, filter);\n  }, [users, filter]);\n  const renderGraph = (users, filter) => {\n    const me = {\n      id_num: '000000000',\n      firstName: 'Me',\n      lastName: '',\n      workplace: 'Tech Company Inc.',\n      hobby: 'Reading',\n      state: 'New York'\n    };\n    const filteredUsers = users.filter(user => {\n      switch (filter) {\n        case 'workplace':\n          return user.workplace === me.workplace;\n        case 'hobby':\n          return user.hobby === me.hobby;\n        case 'state':\n          return user.state === me.state;\n        default:\n          return user.workplace === me.workplace || user.hobby === me.hobby || user.state === me.state;\n      }\n    });\n    const nodes = new DataSet([...filteredUsers.map(user => ({\n      id: user.id_num,\n      label: `${user.firstName} ${user.lastName}`\n    })), {\n      id: me.id_num,\n      label: 'Me',\n      color: {\n        background: 'red',\n        border: 'black'\n      },\n      size: 40\n    }]);\n    const edges = new DataSet();\n    const connectionMap = {\n      workplace: {},\n      hobby: {},\n      state: {}\n    };\n    filteredUsers.forEach(user => {\n      ['workplace', 'hobby', 'state'].forEach(key => {\n        if (!connectionMap[key][user[key]]) connectionMap[key][user[key]] = [];\n        connectionMap[key][user[key]].push(user.id_num);\n      });\n    });\n    Object.keys(connectionMap).forEach(key => {\n      if (filter === 'all' || filter === key) {\n        Object.values(connectionMap[key]).forEach(ids => {\n          ids.forEach((id1, idx1) => {\n            ids.slice(idx1 + 1).forEach(id2 => {\n              edges.add({\n                from: id1,\n                to: id2,\n                color: {\n                  color: getColor(key)\n                }\n              });\n            });\n          });\n        });\n      }\n    });\n    ['workplace', 'hobby', 'state'].forEach(key => {\n      if (connectionMap[key][me[key]]) {\n        connectionMap[key][me[key]].forEach(id => {\n          edges.add({\n            from: me.id_num,\n            to: id,\n            color: {\n              color: getColor(key)\n            }\n          });\n        });\n      }\n    });\n    const data = {\n      nodes,\n      edges\n    };\n    const options = getGraphOptions();\n    new Network(document.getElementById('network-graph'), data, options);\n  };\n  const getGraphOptions = () => ({\n    autoResize: true,\n    height: '100%',\n    width: '100%',\n    nodes: {\n      shape: 'dot',\n      size: 32,\n      font: {\n        size: 32,\n        color: '#314155'\n      },\n      borderWidth: 2\n    },\n    edges: {\n      width: 2,\n      color: {\n        color: '#848484',\n        highlight: '#848484',\n        hover: '#848484',\n        opacity: 1.0\n      },\n      smooth: {\n        type: 'continuous'\n      }\n    },\n    physics: {\n      enabled: true,\n      solver: 'forceAtlas2Based',\n      forceAtlas2Based: {\n        gravitationalConstant: -50,\n        centralGravity: 0.01,\n        springLength: 200,\n        springConstant: 0.08\n      },\n      maxVelocity: 50,\n      minVelocity: 0.1\n    }\n  });\n  const getColor = key => {\n    switch (key) {\n      case 'workplace':\n        return 'blue';\n      case 'hobby':\n        return 'green';\n      case 'state':\n        return 'purple';\n      default:\n        return 'black';\n    }\n  };\n  const getUsers = () => [\n    // ... (same user data)\n  ];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tabs flex justify-center space-x-4 my-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setFilter('all'),\n        className: \"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-700\",\n        children: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setFilter('hobby'),\n        className: \"px-4 py-2 bg-green-500 text-white rounded hover:bg-green-700\",\n        children: \"Hobby\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setFilter('workplace'),\n        className: \"px-4 py-2 bg-yellow-500 text-white rounded hover:bg-yellow-700\",\n        children: \"Workplace\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setFilter('state'),\n        className: \"px-4 py-2 bg-purple-500 text-white rounded hover:bg-purple-700\",\n        children: \"State\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"network-graph\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"legend mt-4 text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-blue-500\",\n          children: \"\\u25A0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 12\n        }, this), \" Workplace Connections\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-green-500\",\n          children: \"\\u25A0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 12\n        }, this), \" Hobby Connections\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-purple-500\",\n          children: \"\\u25A0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 12\n        }, this), \" State Connections\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 5\n  }, this);\n};\n_s(GraphComponent, \"3lUk1T4eQr/j1P/EyG1/+CPoNek=\");\n_c = GraphComponent;\nexport default GraphComponent;\nvar _c;\n$RefreshReg$(_c, \"GraphComponent\");","map":{"version":3,"names":["React","useEffect","useState","DataSet","Network","jsxDEV","_jsxDEV","GraphComponent","_s","users","setUsers","filter","setFilter","userData","getUsers","container","document","getElementById","newContainer","createElement","id","className","style","marginTop","body","appendChild","renderGraph","me","id_num","firstName","lastName","workplace","hobby","state","filteredUsers","user","nodes","map","label","color","background","border","size","edges","connectionMap","forEach","key","push","Object","keys","values","ids","id1","idx1","slice","id2","add","from","to","getColor","data","options","getGraphOptions","autoResize","height","width","shape","font","borderWidth","highlight","hover","opacity","smooth","type","physics","enabled","solver","forceAtlas2Based","gravitationalConstant","centralGravity","springLength","springConstant","maxVelocity","minVelocity","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/WebCourse/WEB-Course/HW2/frontEnd/src/components/homePage/GraphComponent.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { DataSet, Network } from 'vis-network/standalone';\r\n\r\nconst GraphComponent = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [filter, setFilter] = useState('all');\r\n\r\n  useEffect(() => {\r\n    const userData = getUsers();\r\n    setUsers(userData);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const container = document.getElementById('network-graph');\r\n    if (!container) {\r\n      const newContainer = document.createElement('div');\r\n      newContainer.id = 'network-graph';\r\n      newContainer.className = 'w-full bg-gray-500 bg-opacity-50 p-8 rounded-lg shadow-lg flex items-center justify-center';\r\n      newContainer.style.marginTop = '4px';\r\n      document.body.appendChild(newContainer);\r\n    }\r\n    renderGraph(users, filter);\r\n  }, [users, filter]);\r\n\r\n  const renderGraph = (users, filter) => {\r\n    const me = {\r\n      id_num: '000000000',\r\n      firstName: 'Me',\r\n      lastName: '',\r\n      workplace: 'Tech Company Inc.',\r\n      hobby: 'Reading',\r\n      state: 'New York'\r\n    };\r\n\r\n    const filteredUsers = users.filter(user => {\r\n      switch (filter) {\r\n        case 'workplace':\r\n          return user.workplace === me.workplace;\r\n        case 'hobby':\r\n          return user.hobby === me.hobby;\r\n        case 'state':\r\n          return user.state === me.state;\r\n        default:\r\n          return user.workplace === me.workplace || user.hobby === me.hobby || user.state === me.state;\r\n      }\r\n    });\r\n\r\n    const nodes = new DataSet([\r\n      ...filteredUsers.map(user => ({\r\n        id: user.id_num,\r\n        label: `${user.firstName} ${user.lastName}`\r\n      })),\r\n      { id: me.id_num, label: 'Me', color: { background: 'red', border: 'black' }, size: 40 }\r\n    ]);\r\n\r\n    const edges = new DataSet();\r\n    const connectionMap = {\r\n      workplace: {},\r\n      hobby: {},\r\n      state: {}\r\n    };\r\n\r\n    filteredUsers.forEach(user => {\r\n      ['workplace', 'hobby', 'state'].forEach(key => {\r\n        if (!connectionMap[key][user[key]]) connectionMap[key][user[key]] = [];\r\n        connectionMap[key][user[key]].push(user.id_num);\r\n      });\r\n    });\r\n\r\n    Object.keys(connectionMap).forEach(key => {\r\n      if (filter === 'all' || filter === key) {\r\n        Object.values(connectionMap[key]).forEach(ids => {\r\n          ids.forEach((id1, idx1) => {\r\n            ids.slice(idx1 + 1).forEach(id2 => {\r\n              edges.add({ from: id1, to: id2, color: { color: getColor(key) } });\r\n            });\r\n          });\r\n        });\r\n      }\r\n    });\r\n\r\n    ['workplace', 'hobby', 'state'].forEach(key => {\r\n      if (connectionMap[key][me[key]]) {\r\n        connectionMap[key][me[key]].forEach(id => {\r\n          edges.add({ from: me.id_num, to: id, color: { color: getColor(key) } });\r\n        });\r\n      }\r\n    });\r\n\r\n    const data = { nodes, edges };\r\n    const options = getGraphOptions();\r\n    new Network(document.getElementById('network-graph'), data, options);\r\n  };\r\n\r\n  const getGraphOptions = () => ({\r\n    autoResize: true,\r\n    height: '100%',\r\n    width: '100%',\r\n    nodes: {\r\n      shape: 'dot',\r\n      size: 32,\r\n      font: {\r\n        size: 32,\r\n        color: '#314155',\r\n      },\r\n      borderWidth: 2,\r\n    },\r\n    edges: {\r\n      width: 2,\r\n      color: {\r\n        color: '#848484',\r\n        highlight: '#848484',\r\n        hover: '#848484',\r\n        opacity: 1.0,\r\n      },\r\n      smooth: {\r\n        type: 'continuous',\r\n      },\r\n    },\r\n    physics: {\r\n      enabled: true,\r\n      solver: 'forceAtlas2Based',\r\n      forceAtlas2Based: {\r\n        gravitationalConstant: -50,\r\n        centralGravity: 0.01,\r\n        springLength: 200,\r\n        springConstant: 0.08,\r\n      },\r\n      maxVelocity: 50,\r\n      minVelocity: 0.1,\r\n    },\r\n  });\r\n\r\n  const getColor = key => {\r\n    switch (key) {\r\n      case 'workplace': return 'blue';\r\n      case 'hobby': return 'green';\r\n      case 'state': return 'purple';\r\n      default: return 'black';\r\n    }\r\n  };\r\n\r\n  const getUsers = () => [\r\n    // ... (same user data)\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"tabs flex justify-center space-x-4 my-4\">\r\n        <button onClick={() => setFilter('all')} className=\"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-700\">All</button>\r\n        <button onClick={() => setFilter('hobby')} className=\"px-4 py-2 bg-green-500 text-white rounded hover:bg-green-700\">Hobby</button>\r\n        <button onClick={() => setFilter('workplace')} className=\"px-4 py-2 bg-yellow-500 text-white rounded hover:bg-yellow-700\">Workplace</button>\r\n        <button onClick={() => setFilter('state')} className=\"px-4 py-2 bg-purple-500 text-white rounded hover:bg-purple-700\">State</button>\r\n      </div>\r\n      <div id=\"network-graph\"></div>\r\n      <div className=\"legend mt-4 text-center\">\r\n        <p><span className=\"text-blue-500\">■</span> Workplace Connections</p>\r\n        <p><span className=\"text-green-500\">■</span> Hobby Connections</p>\r\n        <p><span className=\"text-purple-500\">■</span> State Connections</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GraphComponent;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}