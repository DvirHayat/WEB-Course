{"ast":null,"code":"var _jsxFileName = \"C:\\\\WebCourse\\\\WEB-Course\\\\HW2\\\\frontEnd\\\\src\\\\components\\\\homePage\\\\GraphComponent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { DataSet, Network } from 'vis-network/standalone';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GraphComponent = () => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [filter, setFilter] = useState('all');\n\n  // Get all the users from the data set and store it locally.\n  useEffect(() => {\n    const userData = getUsers();\n    setUsers(userData);\n  }, []);\n\n  // Renders the graph using given users and filter.\n  useEffect(() => {\n    const renderGraph = (users, filter) => {\n      const container = document.getElementById('network-graph');\n      if (!container) return;\n      container.classList.add('border-2', 'border-black'); // Set the height and border size of the root element\n      const canvas = container.getElementsByTagName('canvas')[0];\n      if (canvas) {\n        canvas.innerHTML = '<canvas width=\"1391\" style=\"position: relative; touch-action: none; user-select: none; -webkit-user-drag: none; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); width: 100%; height: 100%;\" height=\"154\"></canvas>';\n      }\n\n      // For development poprpuse.\n      const me = {\n        id_num: '000000000',\n        firstName: 'Me',\n        lastName: '',\n        workplace: 'Tech Company Inc.',\n        hobby: 'Reading',\n        state: 'New York'\n      };\n\n      // Filter the users by common category.\n      const filteredUsers = users.filter(user => {\n        switch (filter) {\n          case 'all':\n            return user.workplace === me.workplace || user.hobby === me.hobby || user.state === me.state;\n          case 'workplace':\n            return user.workplace === me.workplace;\n          case 'hobby':\n            return user.hobby === me.hobby;\n          case 'state':\n            return user.state === me.state;\n          default:\n            return false;\n        }\n      });\n\n      //For each filter user convert it to a node object.\n      const nodes = new DataSet([...filteredUsers.map(user => ({\n        id: user.id_num,\n        label: `${user.firstName} ${user.lastName}`\n      })), {\n        id: me.id_num,\n        label: 'Me',\n        color: {\n          background: 'red',\n          border: 'black'\n        },\n        size: 30\n      }]);\n      const edges = new DataSet();\n      const connectionMap = {\n        workplace: {},\n        hobby: {},\n        state: {}\n      };\n      filteredUsers.forEach(user => {\n        ['workplace', 'hobby', 'state'].forEach(key => {\n          if (!connectionMap[key][user[key]]) connectionMap[key][user[key]] = [];\n          connectionMap[key][user[key]].push(user.id_num);\n        });\n      });\n      const connectNodes = (ids, color, key) => {\n        ids.forEach((id1, idx1) => {\n          ids.slice(idx1 + 1).forEach(id2 => {\n            if (id1 === me.id_num || id2 === me.id_num) {\n              // If either node is \"Me\", add the edge\n              edges.add({\n                from: id1,\n                to: id2,\n                color: {\n                  color\n                }\n              });\n            } else {\n              // Check if the connection is not based on the given key filter\n              if (key !== filter) {\n                edges.add({\n                  from: id1,\n                  to: id2,\n                  color: {\n                    color\n                  }\n                });\n              }\n            }\n          });\n        });\n      };\n      Object.keys(connectionMap).forEach(key => {\n        if (filter === 'all' || filter === key) {\n          Object.values(connectionMap[key]).forEach(ids => {\n            connectNodes(ids, getEdgeColor(key));\n          });\n        }\n      });\n      ['workplace', 'hobby', 'state'].forEach(key => {\n        if (connectionMap[key][me[key]]) {\n          connectionMap[key][me[key]].forEach(id => {\n            edges.add({\n              from: me.id_num,\n              to: id,\n              color: {\n                color: getEdgeColor(key)\n              }\n            });\n          });\n        }\n      });\n      const data = {\n        nodes,\n        edges\n      };\n      const options = getGraphOptions();\n      new Network(container, data, options);\n    };\n    renderGraph(users, filter);\n  }, [users, filter]);\n  const getGraphOptions = () => ({\n    nodes: {\n      shape: 'dot',\n      size: 32,\n      font: {\n        size: 32,\n        color: '#314155'\n      },\n      borderWidth: 2\n    },\n    edges: {\n      width: 2,\n      color: {\n        color: '#848484',\n        highlight: '#848484',\n        hover: '#848484',\n        opacity: 1.0\n      },\n      smooth: {\n        type: 'continuous'\n      }\n    },\n    physics: {\n      enabled: true,\n      solver: 'forceAtlas2Based',\n      forceAtlas2Based: {\n        gravitationalConstant: -50,\n        centralGravity: 0.01,\n        springLength: 300,\n        // Increased spring length for more space between nodes\n        springConstant: 0.05 // Reduced spring constant for more space between nodes\n      },\n      maxVelocity: 50,\n      minVelocity: 0.1,\n      stabilization: {\n        enabled: true,\n        iterations: 1000 // Increased iterations for better stabilization\n      },\n      timestep: 0.5 // Adjusted timestep for smoother animations\n    },\n    layout: {\n      improvedLayout: true\n    }\n  });\n  const getEdgeColor = conn => {\n    switch (conn) {\n      case 'workplace':\n        return 'blue';\n      case 'hobby':\n        return 'green';\n      case 'state':\n        return 'purple';\n      default:\n        return 'black';\n    }\n  };\n  const getUsers = () => [{\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"birthday\": \"1990-01-01\",\n    \"workplace\": \"Tech Company Inc.\",\n    \"email\": \"john.doe@example.com\",\n    \"country\": \"United States\",\n    \"city\": \"New York\",\n    \"state\": \"New York\",\n    \"gender\": \"Male\",\n    \"id_num\": \"123456789\",\n    \"hobby\": \"Reading\"\n  }, {\n    \"firstName\": \"Jane\",\n    \"lastName\": \"Smith\",\n    \"birthday\": \"1985-05-15\",\n    \"workplace\": \"Health Corp\",\n    \"email\": \"jane.smith@example.com\",\n    \"country\": \"Canada\",\n    \"city\": \"Toronto\",\n    \"state\": \"Ontario\",\n    \"gender\": \"Female\",\n    \"id_num\": \"987654321\",\n    \"hobby\": \"Hiking\"\n  }, {\n    \"firstName\": \"Alice\",\n    \"lastName\": \"Johnson\",\n    \"birthday\": \"1992-08-25\",\n    \"workplace\": \"Finance Group\",\n    \"email\": \"alice.johnson@example.com\",\n    \"country\": \"United Kingdom\",\n    \"city\": \"London\",\n    \"state\": \"England\",\n    \"gender\": \"Female\",\n    \"id_num\": \"123498765\",\n    \"hobby\": \"Traveling\"\n  }, {\n    \"firstName\": \"Bob\",\n    \"lastName\": \"Brown\",\n    \"birthday\": \"1978-11-30\",\n    \"workplace\": \"Retail Co.\",\n    \"email\": \"bob.brown@example.com\",\n    \"country\": \"Australia\",\n    \"city\": \"Sydney\",\n    \"state\": \"New South Wales\",\n    \"gender\": \"Male\",\n    \"id_num\": \"654321987\",\n    \"hobby\": \"Gardening\"\n  }, {\n    \"firstName\": \"Charlie\",\n    \"lastName\": \"Williams\",\n    \"birthday\": \"1982-02-14\",\n    \"workplace\": \"Construction LLC\",\n    \"email\": \"charlie.williams@example.com\",\n    \"country\": \"United States\",\n    \"city\": \"Los Angeles\",\n    \"state\": \"California\",\n    \"gender\": \"Male\",\n    \"id_num\": \"321654987\",\n    \"hobby\": \"Reading\"\n  }, {\n    \"firstName\": \"Diana\",\n    \"lastName\": \"Evans\",\n    \"birthday\": \"1995-07-20\",\n    \"workplace\": \"Media Group\",\n    \"email\": \"diana.evans@example.com\",\n    \"country\": \"France\",\n    \"city\": \"Paris\",\n    \"state\": \"Ile-de-France\",\n    \"gender\": \"Female\",\n    \"id_num\": \"456789123\",\n    \"hobby\": \"Photography\"\n  }, {\n    \"firstName\": \"Edward\",\n    \"lastName\": \"Martinez\",\n    \"birthday\": \"1988-09-10\",\n    \"workplace\": \"Education Center\",\n    \"email\": \"edward.martinez@example.com\",\n    \"country\": \"Spain\",\n    \"city\": \"Madrid\",\n    \"state\": \"Community of Madrid\",\n    \"gender\": \"Male\",\n    \"id_num\": \"789123456\",\n    \"hobby\": \"Cooking\"\n  }, {\n    \"firstName\": \"Fiona\",\n    \"lastName\": \"Garcia\",\n    \"birthday\": \"1993-03-05\",\n    \"workplace\": \"Tech Innovations\",\n    \"email\": \"fiona.garcia@example.com\",\n    \"country\": \"Mexico\",\n    \"city\": \"Mexico City\",\n    \"state\": \"Mexico City\",\n    \"gender\": \"Female\",\n    \"id_num\": \"123654789\",\n    \"hobby\": \"Drawing\"\n  }, {\n    \"firstName\": \"George\",\n    \"lastName\": \"Harris\",\n    \"birthday\": \"1975-12-25\",\n    \"workplace\": \"Automotive Inc.\",\n    \"email\": \"george.harris@example.com\",\n    \"country\": \"Germany\",\n    \"city\": \"Berlin\",\n    \"state\": \"Berlin\",\n    \"gender\": \"Male\",\n    \"id_num\": \"987321654\",\n    \"hobby\": \"Fishing\"\n  }, {\n    \"firstName\": \"Hannah\",\n    \"lastName\": \"Clark\",\n    \"birthday\": \"1991-06-10\",\n    \"workplace\": \"Logistics Ltd.\",\n    \"email\": \"hannah.clark@example.com\",\n    \"country\": \"Japan\",\n    \"city\": \"Tokyo\",\n    \"state\": \"Tokyo\",\n    \"gender\": \"Female\",\n    \"id_num\": \"321987654\",\n    \"hobby\": \"Hiking\"\n  }, {\n    \"firstName\": \"Michael\",\n    \"lastName\": \"Thompson\",\n    \"birthday\": \"1985-08-15\",\n    \"workplace\": \"Tech Company Inc.\",\n    \"email\": \"michael.thompson@example.com\",\n    \"country\": \"United States\",\n    \"city\": \"New York\",\n    \"state\": \"New York\",\n    \"gender\": \"Male\",\n    \"id_num\": \"876543210\",\n    \"hobby\": \"Reading\"\n  }, {\n    \"firstName\": \"Emily\",\n    \"lastName\": \"Davis\",\n    \"birthday\": \"1992-10-12\",\n    \"workplace\": \"Tech Company Inc.\",\n    \"email\": \"emily.davis@example.com\",\n    \"country\": \"United States\",\n    \"city\": \"New York\",\n    \"state\": \"New York\",\n    \"gender\": \"Female\",\n    \"id_num\": \"678901234\",\n    \"hobby\": \"Reading\"\n  }, {\n    \"firstName\": \"William\",\n    \"lastName\": \"Miller\",\n    \"birthday\": \"1980-02-25\",\n    \"workplace\": \"Tech Company Inc.\",\n    \"email\": \"william.miller@example.com\",\n    \"country\": \"United States\",\n    \"city\": \"Mexico City\",\n    \"state\": \"Mexico\",\n    \"gender\": \"Male\",\n    \"id_num\": \"345678901\",\n    \"hobby\": \"Reading\"\n  }, {\n    \"firstName\": \"Sophia\",\n    \"lastName\": \"Wilson\",\n    \"birthday\": \"1995-09-30\",\n    \"workplace\": \"Tech Company Inc.\",\n    \"email\": \"sophia.wilson@example.com\",\n    \"country\": \"United States\",\n    \"city\": \"New York\",\n    \"state\": \"New York\",\n    \"gender\": \"Female\",\n    \"id_num\": \"234567890\",\n    \"hobby\": \"Gym\"\n  }, {\n    \"firstName\": \"David\",\n    \"lastName\": \"Taylor\",\n    \"birthday\": \"1987-04-17\",\n    \"workplace\": \"Tech Company Inc.\",\n    \"email\": \"david.taylor@example.com\",\n    \"country\": \"United States\",\n    \"city\": \"isarel\",\n    \"state\": \"isarel\",\n    \"gender\": \"Male\",\n    \"id_num\": \"901234567\",\n    \"hobby\": \"Reading\"\n  }, {\n    \"firstName\": \"Olivia\",\n    \"lastName\": \"Anderson\",\n    \"birthday\": \"1990-07-05\",\n    \"workplace\": \"Tech Company Inc.\",\n    \"email\": \"olivia.anderson@example.com\",\n    \"country\": \"United States\",\n    \"city\": \"New York\",\n    \"state\": \"New York\",\n    \"gender\": \"Female\",\n    \"id_num\": \"112233445\",\n    \"hobby\": \"Running\"\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tabs flex justify-center space-x-4 my-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setFilter('all'),\n        className: \"px-4 py-2 bg-black text-white rounded hover:bg-slate-950\",\n        children: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setFilter('hobby'),\n        className: \"px-4 py-2 bg-green-500 text-white rounded hover:bg-green-700\",\n        children: \"Hobby\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setFilter('workplace'),\n        className: \"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-700\",\n        children: \"Workplace\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setFilter('state'),\n        className: \"px-4 py-2 bg-purple-500 text-white rounded hover:bg-purple-700\",\n        children: \"State\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"network-graph\",\n      className: \"w-full h-600\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"legend mt-4 text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-blue-500\",\n          children: \"\\u25A0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 12\n        }, this), \" Workplace Connections\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-green-500\",\n          children: \"\\u25A0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 12\n        }, this), \" Hobby Connections\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-purple-500\",\n          children: \"\\u25A0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 12\n        }, this), \" State Connections\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 382,\n    columnNumber: 5\n  }, this);\n};\n_s(GraphComponent, \"3lUk1T4eQr/j1P/EyG1/+CPoNek=\");\n_c = GraphComponent;\nexport default GraphComponent;\nvar _c;\n$RefreshReg$(_c, \"GraphComponent\");","map":{"version":3,"names":["React","useEffect","useState","DataSet","Network","jsxDEV","_jsxDEV","GraphComponent","_s","users","setUsers","filter","setFilter","userData","getUsers","renderGraph","container","document","getElementById","classList","add","canvas","getElementsByTagName","innerHTML","me","id_num","firstName","lastName","workplace","hobby","state","filteredUsers","user","nodes","map","id","label","color","background","border","size","edges","connectionMap","forEach","key","push","connectNodes","ids","id1","idx1","slice","id2","from","to","Object","keys","values","getEdgeColor","data","options","getGraphOptions","shape","font","borderWidth","width","highlight","hover","opacity","smooth","type","physics","enabled","solver","forceAtlas2Based","gravitationalConstant","centralGravity","springLength","springConstant","maxVelocity","minVelocity","stabilization","iterations","timestep","layout","improvedLayout","conn","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/WebCourse/WEB-Course/HW2/frontEnd/src/components/homePage/GraphComponent.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { DataSet, Network } from 'vis-network/standalone';\r\n\r\nconst GraphComponent = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [filter, setFilter] = useState('all');\r\n\r\n    // Get all the users from the data set and store it locally.\r\n  useEffect(() => {\r\n    const userData = getUsers();\r\n    setUsers(userData);\r\n  }, []);\r\n\r\n    // Renders the graph using given users and filter.\r\n  useEffect(() => {\r\n    const renderGraph = (users, filter) => {\r\n      const container = document.getElementById('network-graph');\r\n      if (!container) return;\r\n        container.classList.add( 'border-2', 'border-black'); // Set the height and border size of the root element\r\n        const canvas = container.getElementsByTagName('canvas')[0];\r\n        if (canvas) {\r\n          canvas.innerHTML = '<canvas width=\"1391\" style=\"position: relative; touch-action: none; user-select: none; -webkit-user-drag: none; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); width: 100%; height: 100%;\" height=\"154\"></canvas>'\r\n        }\r\n      \r\n\r\n\r\n        // For development poprpuse.\r\n      const me = {\r\n        id_num: '000000000',\r\n        firstName: 'Me',\r\n        lastName: '',\r\n        workplace: 'Tech Company Inc.',\r\n        hobby: 'Reading',\r\n        state: 'New York'\r\n      };\r\n\r\n        // Filter the users by common category.\r\n      const filteredUsers = users.filter(user => {\r\n        switch (filter) {\r\n          case 'all':\r\n            return user.workplace === me.workplace || user.hobby === me.hobby || user.state === me.state;\r\n          case 'workplace':\r\n            return user.workplace === me.workplace;\r\n          case 'hobby':\r\n            return user.hobby === me.hobby;\r\n          case 'state':\r\n            return user.state === me.state;\r\n          default:\r\n            return false;\r\n        }\r\n      });\r\n\r\n        //For each filter user convert it to a node object.\r\n      const nodes = new DataSet([\r\n        ...filteredUsers.map(user => ({\r\n          id: user.id_num,\r\n          label: `${user.firstName} ${user.lastName}`\r\n        })),\r\n        { id: me.id_num, label: 'Me', color: { background: 'red', border: 'black' }, size: 30 }\r\n      ]);\r\n\r\n      const edges = new DataSet();\r\n      const connectionMap = {\r\n        workplace: {},\r\n        hobby: {},\r\n        state: {}\r\n      };\r\n\r\n      filteredUsers.forEach(user => {\r\n        ['workplace', 'hobby', 'state'].forEach(key => {\r\n          if (!connectionMap[key][user[key]]) connectionMap[key][user[key]] = [];\r\n          connectionMap[key][user[key]].push(user.id_num);\r\n        });\r\n      });\r\n\r\n      const connectNodes = (ids, color, key) => {\r\n        ids.forEach((id1, idx1) => {\r\n          ids.slice(idx1 + 1).forEach(id2 => {\r\n            if (id1 === me.id_num || id2 === me.id_num) {\r\n              // If either node is \"Me\", add the edge\r\n              edges.add({ from: id1, to: id2, color: { color } });\r\n            } else {\r\n              // Check if the connection is not based on the given key filter\r\n              if (key !== filter) {\r\n                edges.add({ from: id1, to: id2, color: { color } });\r\n              }\r\n            }\r\n          });\r\n        });\r\n      };\r\n      \r\n\r\n      Object.keys(connectionMap).forEach(key => {\r\n        if (filter === 'all' || filter === key) {\r\n          Object.values(connectionMap[key]).forEach(ids => {\r\n            connectNodes(ids, getEdgeColor(key));\r\n          });\r\n        }\r\n      });\r\n\r\n      ['workplace', 'hobby', 'state'].forEach(key => {\r\n        if (connectionMap[key][me[key]]) {\r\n          connectionMap[key][me[key]].forEach(id => {\r\n            edges.add({ from: me.id_num, to: id, color: { color: getEdgeColor(key) } });\r\n          });\r\n        }\r\n      });\r\n\r\n      const data = { nodes, edges };\r\n      const options = getGraphOptions();\r\n      new Network(container, data, options);\r\n    };\r\n\r\n    renderGraph(users, filter);\r\n  }, [users, filter]);\r\n\r\n  const getGraphOptions = () => ({\r\n    nodes: {\r\n      shape: 'dot',\r\n      size: 32,\r\n      font: {\r\n        size: 32,\r\n        color: '#314155',\r\n      },\r\n      borderWidth: 2,\r\n    },\r\n    edges: {\r\n      width: 2,\r\n      color: {\r\n        color: '#848484',\r\n        highlight: '#848484',\r\n        hover: '#848484',\r\n        opacity: 1.0,\r\n      },\r\n      smooth: {\r\n        type: 'continuous',\r\n      },\r\n    },\r\n    physics: {\r\n      enabled: true,\r\n      solver: 'forceAtlas2Based',\r\n      forceAtlas2Based: {\r\n        gravitationalConstant: -50,\r\n        centralGravity: 0.01,\r\n        springLength: 300, // Increased spring length for more space between nodes\r\n        springConstant: 0.05, // Reduced spring constant for more space between nodes\r\n      },\r\n      maxVelocity: 50,\r\n      minVelocity: 0.1,\r\n      stabilization: {\r\n        enabled: true,\r\n        iterations: 1000, // Increased iterations for better stabilization\r\n      },\r\n      timestep: 0.5, // Adjusted timestep for smoother animations\r\n    },\r\n    layout: {\r\n      improvedLayout: true,\r\n    },\r\n  });\r\n\r\n  const getEdgeColor = conn => {\r\n    switch (conn) {\r\n      case 'workplace': return 'blue';\r\n      case 'hobby': return 'green';\r\n      case 'state': return 'purple';\r\n      default: return 'black';\r\n    }\r\n  };\r\n\r\n  const getUsers = () => [\r\n    {\r\n      \"firstName\": \"John\",\r\n      \"lastName\": \"Doe\",\r\n      \"birthday\": \"1990-01-01\",\r\n      \"workplace\": \"Tech Company Inc.\",\r\n      \"email\": \"john.doe@example.com\",\r\n      \"country\": \"United States\",\r\n      \"city\": \"New York\",\r\n      \"state\": \"New York\",\r\n      \"gender\": \"Male\",\r\n      \"id_num\": \"123456789\",\r\n      \"hobby\": \"Reading\"\r\n    },\r\n    {\r\n      \"firstName\": \"Jane\",\r\n      \"lastName\": \"Smith\",\r\n      \"birthday\": \"1985-05-15\",\r\n      \"workplace\": \"Health Corp\",\r\n      \"email\": \"jane.smith@example.com\",\r\n      \"country\": \"Canada\",\r\n      \"city\": \"Toronto\",\r\n      \"state\": \"Ontario\",\r\n      \"gender\": \"Female\",\r\n      \"id_num\": \"987654321\",\r\n      \"hobby\": \"Hiking\"\r\n    },\r\n    {\r\n      \"firstName\": \"Alice\",\r\n      \"lastName\": \"Johnson\",\r\n      \"birthday\": \"1992-08-25\",\r\n      \"workplace\": \"Finance Group\",\r\n      \"email\": \"alice.johnson@example.com\",\r\n      \"country\": \"United Kingdom\",\r\n      \"city\": \"London\",\r\n      \"state\": \"England\",\r\n      \"gender\": \"Female\",\r\n      \"id_num\": \"123498765\",\r\n      \"hobby\": \"Traveling\"\r\n    },\r\n    {\r\n      \"firstName\": \"Bob\",\r\n      \"lastName\": \"Brown\",\r\n      \"birthday\": \"1978-11-30\",\r\n      \"workplace\": \"Retail Co.\",\r\n      \"email\": \"bob.brown@example.com\",\r\n      \"country\": \"Australia\",\r\n      \"city\": \"Sydney\",\r\n      \"state\": \"New South Wales\",\r\n      \"gender\": \"Male\",\r\n      \"id_num\": \"654321987\",\r\n      \"hobby\": \"Gardening\"\r\n    },\r\n    {\r\n      \"firstName\": \"Charlie\",\r\n      \"lastName\": \"Williams\",\r\n      \"birthday\": \"1982-02-14\",\r\n      \"workplace\": \"Construction LLC\",\r\n      \"email\": \"charlie.williams@example.com\",\r\n      \"country\": \"United States\",\r\n      \"city\": \"Los Angeles\",\r\n      \"state\": \"California\",\r\n      \"gender\": \"Male\",\r\n      \"id_num\": \"321654987\",\r\n      \"hobby\": \"Reading\"\r\n    },\r\n    {\r\n      \"firstName\": \"Diana\",\r\n      \"lastName\": \"Evans\",\r\n      \"birthday\": \"1995-07-20\",\r\n      \"workplace\": \"Media Group\",\r\n      \"email\": \"diana.evans@example.com\",\r\n      \"country\": \"France\",\r\n      \"city\": \"Paris\",\r\n      \"state\": \"Ile-de-France\",\r\n      \"gender\": \"Female\",\r\n      \"id_num\": \"456789123\",\r\n      \"hobby\": \"Photography\"\r\n    },\r\n    {\r\n      \"firstName\": \"Edward\",\r\n      \"lastName\": \"Martinez\",\r\n      \"birthday\": \"1988-09-10\",\r\n      \"workplace\": \"Education Center\",\r\n      \"email\": \"edward.martinez@example.com\",\r\n      \"country\": \"Spain\",\r\n      \"city\": \"Madrid\",\r\n      \"state\": \"Community of Madrid\",\r\n      \"gender\": \"Male\",\r\n      \"id_num\": \"789123456\",\r\n      \"hobby\": \"Cooking\"\r\n    },\r\n    {\r\n      \"firstName\": \"Fiona\",\r\n      \"lastName\": \"Garcia\",\r\n      \"birthday\": \"1993-03-05\",\r\n      \"workplace\": \"Tech Innovations\",\r\n      \"email\": \"fiona.garcia@example.com\",\r\n      \"country\": \"Mexico\",\r\n      \"city\": \"Mexico City\",\r\n      \"state\": \"Mexico City\",\r\n      \"gender\": \"Female\",\r\n      \"id_num\": \"123654789\",\r\n      \"hobby\": \"Drawing\"\r\n    },\r\n    {\r\n      \"firstName\": \"George\",\r\n      \"lastName\": \"Harris\",\r\n      \"birthday\": \"1975-12-25\",\r\n      \"workplace\": \"Automotive Inc.\",\r\n      \"email\": \"george.harris@example.com\",\r\n      \"country\": \"Germany\",\r\n      \"city\": \"Berlin\",\r\n      \"state\": \"Berlin\",\r\n      \"gender\": \"Male\",\r\n      \"id_num\": \"987321654\",\r\n      \"hobby\": \"Fishing\"\r\n    },\r\n    {\r\n      \"firstName\": \"Hannah\",\r\n      \"lastName\": \"Clark\",\r\n      \"birthday\": \"1991-06-10\",\r\n      \"workplace\": \"Logistics Ltd.\",\r\n      \"email\": \"hannah.clark@example.com\",\r\n      \"country\": \"Japan\",\r\n      \"city\": \"Tokyo\",\r\n      \"state\": \"Tokyo\",\r\n      \"gender\": \"Female\",\r\n      \"id_num\": \"321987654\",\r\n      \"hobby\": \"Hiking\"\r\n    },\r\n    {\r\n      \"firstName\": \"Michael\",\r\n      \"lastName\": \"Thompson\",\r\n      \"birthday\": \"1985-08-15\",\r\n      \"workplace\": \"Tech Company Inc.\",\r\n      \"email\": \"michael.thompson@example.com\",\r\n      \"country\": \"United States\",\r\n      \"city\": \"New York\",\r\n      \"state\": \"New York\",\r\n      \"gender\": \"Male\",\r\n      \"id_num\": \"876543210\",\r\n      \"hobby\": \"Reading\"\r\n    },\r\n    {\r\n      \"firstName\": \"Emily\",\r\n      \"lastName\": \"Davis\",\r\n      \"birthday\": \"1992-10-12\",\r\n      \"workplace\": \"Tech Company Inc.\",\r\n      \"email\": \"emily.davis@example.com\",\r\n      \"country\": \"United States\",\r\n      \"city\": \"New York\",\r\n      \"state\": \"New York\",\r\n      \"gender\": \"Female\",\r\n      \"id_num\": \"678901234\",\r\n      \"hobby\": \"Reading\"\r\n    },\r\n    {\r\n      \"firstName\": \"William\",\r\n      \"lastName\": \"Miller\",\r\n      \"birthday\": \"1980-02-25\",\r\n      \"workplace\": \"Tech Company Inc.\",\r\n      \"email\": \"william.miller@example.com\",\r\n      \"country\": \"United States\",\r\n      \"city\": \"Mexico City\",\r\n      \"state\": \"Mexico\",\r\n      \"gender\": \"Male\",\r\n      \"id_num\": \"345678901\",\r\n      \"hobby\": \"Reading\"\r\n    },\r\n    {\r\n      \"firstName\": \"Sophia\",\r\n      \"lastName\": \"Wilson\",\r\n      \"birthday\": \"1995-09-30\",\r\n      \"workplace\": \"Tech Company Inc.\",\r\n      \"email\": \"sophia.wilson@example.com\",\r\n      \"country\": \"United States\",\r\n      \"city\": \"New York\",\r\n      \"state\": \"New York\",\r\n      \"gender\": \"Female\",\r\n      \"id_num\": \"234567890\",\r\n      \"hobby\": \"Gym\"\r\n    },\r\n    {\r\n      \"firstName\": \"David\",\r\n      \"lastName\": \"Taylor\",\r\n      \"birthday\": \"1987-04-17\",\r\n      \"workplace\": \"Tech Company Inc.\",\r\n      \"email\": \"david.taylor@example.com\",\r\n      \"country\": \"United States\",\r\n      \"city\": \"isarel\",\r\n      \"state\": \"isarel\",\r\n      \"gender\": \"Male\",\r\n      \"id_num\": \"901234567\",\r\n      \"hobby\": \"Reading\"\r\n    },\r\n    {\r\n      \"firstName\": \"Olivia\",\r\n      \"lastName\": \"Anderson\",\r\n      \"birthday\": \"1990-07-05\",\r\n      \"workplace\": \"Tech Company Inc.\",\r\n      \"email\": \"olivia.anderson@example.com\",\r\n      \"country\": \"United States\",\r\n      \"city\": \"New York\",\r\n      \"state\": \"New York\",\r\n      \"gender\": \"Female\",\r\n      \"id_num\": \"112233445\",\r\n      \"hobby\": \"Running\"\r\n    }\r\n];\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"tabs flex justify-center space-x-4 my-4\">\r\n        <button onClick={() => setFilter('all')} className=\"px-4 py-2 bg-black text-white rounded hover:bg-slate-950\">All</button>\r\n        <button onClick={() => setFilter('hobby')} className=\"px-4 py-2 bg-green-500 text-white rounded hover:bg-green-700\">Hobby</button>\r\n        <button onClick={() => setFilter('workplace')} className=\"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-700\">Workplace</button>\r\n        <button onClick={() => setFilter('state')} className=\"px-4 py-2 bg-purple-500 text-white rounded hover:bg-purple-700\">State</button>\r\n      </div>\r\n      <div id=\"network-graph\" className=\"w-full h-600\"></div>\r\n      <div className=\"legend mt-4 text-center\">\r\n        <p><span className=\"text-blue-500\">■</span> Workplace Connections</p>\r\n        <p><span className=\"text-green-500\">■</span> Hobby Connections</p>\r\n        <p><span className=\"text-purple-500\">■</span> State Connections</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GraphComponent;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}